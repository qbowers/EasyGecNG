/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */


plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

// Specify name of the EasyGecNG Jar to be built. TODO: rename app to avoid needing to do this
jar {
    archiveBaseName = 'EasyGecNG'
}

distributions {
    main {
        contents {
            // TODO: move this into resources?
            from 'src/main/lang.xml'
        }
    }
}

// Specify that we require Java8
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

// App version. TODO: Pull this from git tag
version = '1.0.1';

// Set the encoding to allow french characters. TODO: use UTF-8
compileJava.options.encoding = "windows-1252"
compileTestJava.options.encoding = "windows-1252"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // TODO: need to migrate GecoSI to JSerialComm?
    implementation 'com.fazecast:jSerialComm:2.11.0'
    implementation 'jdom:jdom:1.+'
    implementation 'junit:junit:4.13'
    implementation 'org.mockito:mockito-core:1.9.+'
    
    // This is pulled from source defined in settings.gradle
    implementation 'net.gecosi:lib:1.+'
}

application {
    // Define the main class for the application.
    mainClass = 'ihm.IhmEasyGec'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


